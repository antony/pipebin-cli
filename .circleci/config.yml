version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10

    working_directory: ~/workspace

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Eslint
          command: npm run lint

      - store_test_results:
          path: reports/junit

  publish:
    docker:
      - image: circleci/node:10

    steps:
      - add_ssh_keys
      - checkout

      - run:
          name: Authorize NPM
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Publish to NPM
          command: npm publish

      - run:
          name: Build executables
          command: |
            BUILDS=""
            function join_by {
              local d=$1
              shift
              echo -n "$1"
              shift
              printf "%s" "${@/#/$d}"
            }

            function build_asset () {
              for platform in ${platforms[@]}
              do 
                  for arch in ${architectures[@]}
                  do
                    ASSET=./build/$platform/$arch/pb
                    EXEC_TARGET="node9-$platform-$arch" EXEC_OUTPUT=$ASSET npm run build:executable
                    BUILDS="$BUILDS $ASSET"
                  done
              done
            }

            function build () {
              local platforms=("win" "macos" "linux")
              local architectures=("x64")
              build_asset
            }

            build
            
            npm run github:publish-release -- $(join_by ',' $BUILDS)

workflows:
  version: 2
  main:
    jobs:
      - build:
          context: org-global
          filters:
            branches:
              only: master
            tags:
              only: /v.*/
      - publish:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/